CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

# googletest project setup: autogenerated
add_definitions(-DGTEST_LANGUAGE_CXX14)

find_package(Threads REQUIRED)

if ($ENV{GOOGLETEST_DIR})
    SET(GOOGLETEST_DIR $ENV{GOOGLETEST_DIR})
else ()
    SET(GOOGLETEST_DIR "${CMAKE_SOURCE_DIR}/external/googletest")
endif ()

if (EXISTS ${GOOGLETEST_DIR})
    SET(GTestSrc ${GOOGLETEST_DIR}/googletest)
    SET(GMockSrc ${GOOGLETEST_DIR}/googlemock)
else ()
    message( FATAL_ERROR "No googletest src dir found - check GOOGLETEST_DIR")
endif ()

include_directories(${GTestSrc} ${GTestSrc}/include ${GMockSrc}
    ${GMockSrc}/include)

set(GTEST_BINARY_DIR ${CMAKE_BINARY_DIR}/googletest)
add_subdirectory(${GOOGLETEST_DIR} ${GTEST_BINARY_DIR})
list(APPEND gtest_libs Threads::Threads gtest_main gmock)

set(INSTALL_GTEST OFF)

if (COVERAGE MATCHES ON)
    # code coverage
    set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})
    include(code_coverage)
    #APPEND_COVERAGE_COMPILER_FLAGS()
    set(test_runner ctest --all --output-on-failure)
    SETUP_TARGET_FOR_COVERAGE_GCOVR_HTML(NAME coverage_${PROJECT_NAME}
        EXECUTABLE ${test_runner})
endif()

# project sources setup
set(parent_project "${CMAKE_SOURCE_DIR}/sources")
include_directories(${parent_project})

# AddTest(
#     NAME some_test                    # New target name
#     DEPENDENCIES sources_under_test   # Dependencies to build first
# )
function (AddTest)

    set(options NONE)
    set(oneValueArgs NAME)
    set(multiValueArgs DEPENDENCIES)
    cmake_parse_arguments(Test "${options}" "${oneValueArgs}"
        "${multiValueArgs}" ${ARGN})

    # setup unit tests
    set(sources_to_test)
    list(APPEND sources_to_test "${parent_project}/${Test_NAME}.cpp")

    add_library(${Test_NAME}_src STATIC EXCLUDE_FROM_ALL ${sources_to_test})
    target_compile_options(${Test_NAME}_src PRIVATE ${COVERAGE_COMPILER_FLAGS})

    set(dependencies)
    foreach(depend ${Test_DEPENDENCIES})
        list(APPEND dependencies "${parent_project}/${depend}.cpp")
    endforeach()

    # Add test cpp file
    add_executable(${Test_NAME} test_${Test_NAME}.cpp ${dependencies})

    # Link test executable against gmock & gtest_main, sources under test
    target_link_libraries(${Test_NAME} PRIVATE ${gtest_libs} ${Test_NAME}_src)

    add_test(NAME ${Test_NAME} COMMAND ${Test_NAME})

    set_tests_properties(${Test_NAME} PROPERTIES LABEL "unit")

endfunction() # AddTest

AddTest(NAME Lexer)
AddTest(NAME Parser DEPENDENCIES OpFactory CmdPop CmdAdd CmdPush CmdDump
    CmdAssert CmdSub CmdMul CmdDiv CmdMod CmdPrint CmdExit)
